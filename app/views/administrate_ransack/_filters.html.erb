<% content_for :javascript do %>
  <script>
    document.addEventListener('DOMContentLoaded', (_event) => {
      if(typeof flatpickr === 'function') {
        flatpickr('.filter [type="datetime-local"]', { enableTime: true });
      }
    });
  </script>
<% end %>

<% attribute_labels ||= {} %>
<%= search_form_for [:admin, @ransack_results], html: { 'data-administrate-ransack-filters': '1' } do |f| %>
  <div class="filters">
    <% attribute_types.each do |field, type| %>
      <% next if field == :id %>

      <div class="filter">
        <% input_type = type.is_a?(Administrate::Field::Deferred) ? type.deferred_class.to_s : type.to_s %>
        <% case input_type %>
        <% when 'Administrate::Field::BelongsTo' %>
          <% association = @ransack_results.klass.reflections[field.to_s] %>
          <% if association %>
            <% label = association.klass.method_defined?(:admin_label) ? :admin_label : :to_s %>
            <% collection = association.klass.send(association.klass.respond_to?(:admin_scope) ? :admin_scope : :all) %>
            <%= f.label(attribute_labels.include?(field) ? attribute_labels[field] : field) %>
            <%= f.collection_select "#{field}_id_eq", collection, :id, label, include_blank: true %>
          <% end %>
        <% when 'Administrate::Field::Boolean' %>
          <%= f.label(attribute_labels.include?(field) ? attribute_labels[field] : field) %>
          <%= f.select "#{field}_eq", [[t('administrate_ransack.filters.no'), false], [t('administrate_ransack.filters.yes'), true]], include_blank: true %>
        <% when 'Administrate::Field::Date' %>
          <%= f.label(attribute_labels.include?(field) ? attribute_labels[field] : field) %>
          <%= f.date_field "#{field}_gteq" %>
          <%= f.date_field "#{field}_lteq" %>
        <% when 'Administrate::Field::DateTime' %>
          <%= f.label(attribute_labels.include?(field) ? attribute_labels[field] : field) %>
          <%= f.datetime_field "#{field}_gteq" %>
          <%= f.datetime_field "#{field}_lteq" %>
        <% when 'Administrate::Field::Email', 'Administrate::Field::String', 'Administrate::Field::Text' %>
          <%= f.label(attribute_labels.include?(field) ? attribute_labels[field] : field) %>
          <%= f.search_field "#{field}_cont" %>
        <% when 'Administrate::Field::Number' %>
          <%= f.label(attribute_labels.include?(field) ? attribute_labels[field] : field) %>
          <%= f.number_field "#{field}_eq" %>
        <% when 'Administrate::Field::HasMany' %>
          <% association = @ransack_results.klass.reflections[field.to_s] %>
          <% if association %>
            <% label = association.klass.method_defined?(:admin_label) ? :admin_label : :to_s %>
            <% collection = association.klass.send(association.klass.respond_to?(:admin_scope) ? :admin_scope : :all) %>
            <%= f.label(attribute_labels.include?(field) ? attribute_labels[field] : field) %>
            <%= f.collection_check_boxes "#{field}_id_in", collection, :id, label do |b| %>
              <%= b.label do %>
                <%= b.check_box %>
                <span><%= b.object.send(label) %></span>
              <% end %>
            <% end %>
          <% end %>
        <% when 'Administrate::Field::Select' %>
          <%= f.label(attribute_labels.include?(field) ? attribute_labels[field] : field) %>
          <%= f.select "#{field}_eq", type.options[:collection], include_blank: true %>
        <% else %>
          <!-- unsupported Field::HasOne -->
          <!-- unsupported Field::Polymorphic -->
          <!-- unsupported Field::Password -->
        <% end %>
      </div>
    <% end %>
  </div>

  <div class="filters-buttons">
    <%= f.submit %>
    <%= link_to t('administrate_ransack.filters.clear_filters'), url_for([:admin, @ransack_results.klass]), class: 'btn-clear-filters' %>
  </div>
<% end %>
